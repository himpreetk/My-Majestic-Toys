{"version":3,"sources":["shared/navbar.tsx","shared/footer.tsx","shared/components/contentLoader.tsx","store/services/products.service.tsx","components/products/productCard.tsx","store/actions/product.action.tsx","store/actions/product.types.tsx","components/products/productslist.tsx","screens/products.tsx","screens/login.tsx","router.tsx","App.tsx","serviceWorker.js","store/reducers/product.reducer.tsx","store/reducers/index.tsx","store/store.tsx","index.tsx"],"names":["Navbar","useState","isOpen","setIsOpen","color","light","expand","NavbarBrand","tag","Link","to","className","alt","src","style","width","height","NavbarToggler","onClick","Collapse","navbar","Nav","Footer","ContentLoader","map","i","key","role","aria-label","viewBox","preserveAspectRatio","x","y","clipPath","fill","id","cx","cy","r","rx","ry","offset","stopColor","stopOpacity","attributeName","values","keyTimes","dur","repeatCount","console","log","process","REACT_APP_API_URL","axios","create","baseURL","styles","maxHeight","maxWidth","margin","fontSize","overflow","textAlign","marginBottom","ProductCardHeader","productModel","productType","productPrice","cardText","productStock","cardInfo","ProductCardImage","productImage","cardImage","connect","state","storeStatus","products","dispatch","checkProductAvailability","a","get","then","res","type","payload","data","catch","err","response","props","product","card","footerIcons","showStatus","setShowStatus","image","model","price","stock","parseInt","mapDispatchToProps","fetchAllProducts","useEffect","length","Products","LoginForm","AppRouter","path","exact","component","render","App","Container","Boolean","window","location","hostname","match","initialState","ProductReducer","action","forEach","item","checkAvailability","combineReducers","middleware","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.73bd6a56.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Collapse,\n  Navbar as ReactNavbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavLink\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nconst Navbar = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n  return (\n    <div>\n      <ReactNavbar color='light' light expand='md'>\n        <NavbarBrand tag={Link} color='primary' to='/'>\n          Majestic Toys\n        </NavbarBrand>\n        <img\n          className='card-img-top mt-6'\n          alt={\"Card cap\"}\n          src=\"imgs/car.jpeg\"\n          style={{ width: '80px', height: 'auto'}}\n        />\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className='mr-auto' navbar>\n          </Nav>\n          {/* <NavLink tag={Link} to='/about'>\n            About\n          </NavLink> */}\n        </Collapse>\n      </ReactNavbar>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n// import \"./footer.scss\";\n\nexport default function Footer() {\n  return (\n    <footer className='container-fluid footer text-left mt-3'>\n      {/* <p className='mr-auto'>\n        Developed by:\n        <strong>Mohammed Ismail</strong>\n      </p>\n      <div style={{ float: \"right\" }}>\n        <Link to='mailto:ikismail7@gmail.com' style={{ marginRight: \"10px\" }}>\n          <i\n            className='fa fa-envelope-open'\n            aria-hidden='true'\n            style={{ fontSize: \"20px\" }}></i>\n        </Link>\n        <Link\n          to='https://github.com/ikismail'\n          target='_blank'\n          style={{ marginRight: \"10px\" }}>\n          <i\n            className='fa fa-github'\n            aria-hidden='true'\n            style={{ fontSize: \"20px\" }}></i>\n        </Link>\n        <Link\n          to='https://www.linkedin.com/in/ikismail7/'\n          target='_blank'\n          style={{ marginRight: \"10px\" }}>\n          <i\n            className='fa fa-linkedin'\n            aria-hidden='true'\n            style={{ fontSize: \"20px\" }}></i>\n        </Link>\n      </div> */}\n    </footer>\n  );\n}\n","import React from \"react\";\n\nfunction ContentLoader() {\n  return (\n    <>\n      {[1, 2, 3, 4].map(i => (\n        <div className='col-md-3 mb-3' key={i}>\n          <svg\n            role='img'\n            aria-label='Loading interface...'\n            viewBox='0 0 250 450'\n            preserveAspectRatio='none'\n            width='260'\n            height='400'>\n            <title>Loading interface...</title>\n            <rect\n              x='0'\n              y='0'\n              width='250'\n              height='450'\n              clipPath='url(#or8wpu5l6lj)'\n              style={{ fill: \"url('#zt02gf7g59b')\" }}></rect>\n            <defs>\n              <clipPath id='or8wpu5l6lj'>\n                <circle cx='30' cy='30' r='30'></circle>\n                <rect\n                  x='75'\n                  y='13'\n                  rx='4'\n                  ry='4'\n                  width='100'\n                  height='13'></rect>\n                <rect x='75' y='37' rx='4' ry='4' width='50' height='8'></rect>\n                <rect\n                  x='0'\n                  y='70'\n                  rx='5'\n                  ry='5'\n                  width='400'\n                  height='400'></rect>\n              </clipPath>\n              <linearGradient id='zt02gf7g59b'>\n                <stop offset='-1.07979' stopColor='#f0f0f0' stopOpacity='1'>\n                  <animate\n                    attributeName='offset'\n                    values='-2; -2; 1'\n                    keyTimes='0; 0.25; 1'\n                    dur='2s'\n                    repeatCount='indefinite'></animate>\n                </stop>\n                <stop offset='-0.0797859' stopColor='#e0e0e0' stopOpacity='1'>\n                  <animate\n                    attributeName='offset'\n                    values='-1; -1; 2'\n                    keyTimes='0; 0.25; 1'\n                    dur='2s'\n                    repeatCount='indefinite'></animate>\n                </stop>\n                <stop offset='0.920214' stopColor='#f0f0f0' stopOpacity='1'>\n                  <animate\n                    attributeName='offset'\n                    values='0; 0; 3'\n                    keyTimes='0; 0.25; 1'\n                    dur='2s'\n                    repeatCount='indefinite'></animate>\n                </stop>\n              </linearGradient>\n            </defs>\n          </svg>\n        </div>\n      ))}\n    </>\n  );\n}\n\nexport default ContentLoader;\n","// import { PRODUCTS_DATA } from \"../fake_data/products\";\n// import { Product } from \"../model/product\";\nimport axios from 'axios';\nconsole.log(process.env.REACT_APP_API_URL);\nexport default axios.create({\n  baseURL: process.env.REACT_APP_API_URL || `http://localhost/rest/api/v1`\n})\n\n// const getAllProducts = (): Product[] => {\n//   return PRODUCTS_DATA;\n// };\n\n// const getTopProducts = (): Product[] => {\n//   return PRODUCTS_DATA.filter((product: Product) => product.isTopProduct);\n// };\n\n// const getBestProducts = (): Product[] => {\n//   return PRODUCTS_DATA.filter(product => product.isBestProduct);\n// };\n\n// export default {\n//   getAllProducts,\n//   getTopProducts,\n//   getBestProducts\n// };\n","import React, { useState } from \"react\";\nimport { Product } from \"../../store/model/product\";\nimport \"../../config/styles/product-filter.scss\";\nimport Icon from \"../../shared/icon\";\nimport { connect } from \"react-redux\";\nimport { checkProductAvailability } from \"../../store/actions/product.action\";\n\nconst styles = {\n  cardImage: {\n    maxHeight: \"120px\",\n    maxWidth: \"180px\",\n    margin: \"auto\"\n  },\n  footerIcons: {\n    fontSize: \"95%\"\n  },\n  card: {\n    height: \"auto\"\n  },\n  cardText: {\n    height: \"20px\",\n    overflow: \"hidden\",\n    textAlign: \"left\" as const\n  },\n  cardInfo: {\n    marginBottom: \"10px\",\n  }\n};\n\nconst ProductCardHeader = ({\n  productModel,\n  productType,\n  productPrice,\n  productStock,\n}: {\n  productModel: string;\n  productType: string;\n  productPrice: string;\n  productStock: string;\n}) => {\n  const { cardText, cardInfo } = styles;\n  return (\n    <>\n      <h6 className='card-text' style={cardText}>\n        {productModel}.\n      </h6>\n      <div style={cardInfo} className='card-info'>\n        <div style={cardText}>Type: {productType === '1' ? 'electric' : 'mechanical'}</div>\n        <div style={cardText}>Price: ${productPrice}</div>\n        {/* <div style={cardText}>Stock: {productStock}</div> */}\n      </div>\n    </>\n  );\n};\n\nconst ProductCardImage = ({ productImage }: { productImage: string }) => {\n  const { cardImage } = styles;\n  return (\n    <img\n      className='card-img-top mt-2'\n      alt={\"Card cap\"}\n      src={productImage}\n      style={cardImage}\n    />\n  );\n};\n\nconst ProductCard = (props: {\n  product: Product;\n  storeStatus: boolean;\n  checkProductAvailability: (id: number) => {};\n}) => {\n  const {product, storeStatus, checkProductAvailability} = props;\n  const { card, footerIcons } = styles;\n\n  const [showStatus, setShowStatus] = useState(false);\n\n  const handleClick = (id: string) => {\n    setShowStatus(!showStatus);\n    checkProductAvailability(parseInt(id, 10));\n  }\n\n  return (\n    <div className='mb-4 shadow-sm text-center border' style={card}>\n      <ProductCardImage productImage={product.image} />\n      <div className='card-body'>\n        <ProductCardHeader\n          productModel={product.model}\n          productType={product.type}\n          productPrice={product.price}\n          productStock={product.stock}\n        />\n        <div className='d-flex justify-content-between align-items-center'>\n          <div className='btn-group'>\n            <button type='button' className='btn btn-sm primary-btn' key={product.id} onClick={() => handleClick(product.id)}>\n              {showStatus ? 'Hide Availability' : 'Check Availability'}\n            </button>\n          </div>\n          {showStatus ? \n          <small className='text-muted' style={footerIcons}>\n            {product.stock !== '0' ? 'Available' : 'Not Available'}\n          </small> : '' }\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: {\n  products: {\n    storeStatus: boolean\n  }\n}) => ({\n  storeStatus: state.products.storeStatus\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  checkProductAvailability: (id: number) => dispatch(checkProductAvailability(id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductCard);\n","import {\n  FETCH_ALL_PRODUCTS,\n  FETCH_ALL_PRODUCTS_ERRORS,\n  CHECK_AVAILABILITY,\n  CHECK_AVAILABILITY_ERRORS,\n  // FETCH_BEST_PRODUCTS,\n  // FETCH_TOP_PRODUCTS,\n  // UPDATE_FILTER\n} from \"./product.types\";\nimport axios from \"../services/products.service\";\nimport { Product } from \"../model/product\";\n\nexport const fetchAllProducts = () => async (\n  dispatch: (arg0: { type: string; payload: Product[] }) => void\n) => {\n  // const products = ProductService.getAllProducts();\n  axios\n    .get('/toy/toys')\n    .then(res => {\n      dispatch({\n        type: FETCH_ALL_PRODUCTS,\n        payload: res.data.data\n      })\n    })\n    .catch(err => {\n      dispatch({\n        type: FETCH_ALL_PRODUCTS_ERRORS,\n        payload: err.response\n      })\n    });\n};\n\nexport const checkProductAvailability = (id: number) => async (\n  dispatch: (arg0: { type: string; payload: boolean }) => void\n) => {\n  console.log(\"id\", id);\n  // const products = ProductService.getAllProducts();\n  axios\n    .get('/toy/check?id=' + id)\n    .then(res => {\n      dispatch({\n        type: CHECK_AVAILABILITY,\n        payload: res.data.data === 0 ? false :true\n      })\n    })\n    .catch(err => {\n      dispatch({\n        type: CHECK_AVAILABILITY_ERRORS,\n        payload: err.response\n      })\n    });\n};\n\n// export const updateFilter = (\n//   payload: string,\n//   type = \"productCategory\"\n// ) => async (dispatch: (arg0: { type: string; payload: any }) => void) => {\n//   dispatch({\n//     type: UPDATE_FILTER,\n//     payload: payload\n//   });\n//   let prodDupList: Product[] = [];\n//   const products: Product[] = [...ProductService.getAllProducts()];\n//   let filteredData: Product[] = [];\n//   if (payload !== \"All\") {\n//     // eslint-disable-next-line array-callback-return\n//     products.map((prod: any): void => {\n//       if (prod[type] === payload) {\n//         filteredData.push(prod);\n//       }\n//     });\n//     prodDupList = filteredData;\n//   } else {\n//     prodDupList = filteredData = products;\n//   }\n\n//   dispatch({\n//     type: FETCH_ALL_PRODUCTS,\n//     payload: prodDupList\n//   });\n// };\n\n// export const fetchTopProducts = () => async (\n//   dispatch: (arg: { type: string; payload: Product[] }) => void\n// ) => {\n//   const products = ProductService.getTopProducts();\n//   dispatch({ type: FETCH_TOP_PRODUCTS, payload: products });\n// };\n\n// export const fetchBestProducts = () => async (\n//   dispatch: (arg: { type: string; payload: Product[] }) => void\n// ) => {\n//   const products = ProductService.getBestProducts();\n//   dispatch({ type: FETCH_BEST_PRODUCTS, payload: products });\n// };\n","export const FETCH_ALL_PRODUCTS = \"FETCH_ALL_PRODUCTS\";\nexport const FETCH_ALL_PRODUCTS_ERRORS = \"FETCH_ALL_PRODUCTS_ERRORS\";\nexport const CHECK_AVAILABILITY = \"CHECK_AVAILABILITY\";\nexport const CHECK_AVAILABILITY_ERRORS = \"CHECK_AVAILABILITY_ERRORS\";\nexport const FETCH_TOP_PRODUCTS = \"FETCH_TOP_PRODUCTS\";\nexport const FETCH_BEST_PRODUCTS = \"FETCH_BEST_PRODUCTS\";\nexport const UPDATE_FILTER = \"UPDATE_FILTER\";\n","// import \"rc-pagination/assets/index.css\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { ContentLoader } from \"../../shared\";\nimport { fetchAllProducts } from \"../../store/actions/product.action\";\nimport { Product } from \"../../store/model/product\";\nimport ProductCard from \"./productCard\";\n\nconst Productslist = (props: {\n  products: Product[];\n  fetchAllProducts: () => {};\n}) => {\n  const { products, fetchAllProducts } = props;\n  useEffect(() => {\n    fetchAllProducts();\n  }, []);\n\n  const iterateProducts = () => {\n    if (products.length === 0) {\n      return <ContentLoader />;\n    }\n\n    return products.map((product: Product) => (\n      <div className='col-md-4' key={product.id}>\n        <ProductCard product={product} />\n      </div>\n    ));\n  };\n\n  return (\n    <div className='products'>\n      <div className='row'>{iterateProducts()}</div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: {\n  products: {\n    products: Product[];\n  };\n}) => ({\n  products: state.products.products,\n});\n\nconst mapDispatchToProps = {\n  fetchAllProducts\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Productslist);\n","import React from \"react\";\nimport { Productslist } from \"../components/products/\";\n\nfunction Products() {\n  return (\n    <div className='row mt-5'>\n      {/* <div className='col-md-3 order-md-1 mb-4'>\n        <ProductFilter />\n      </div> */}\n      {/* <div className='col-md-9 order-md-2'>\n        <Productslist />\n      </div> */}\n      <div className='col-md-12 order-md-2'>\n        <Productslist />\n      </div>\n    </div>\n  );\n}\n\nexport default Products;\n","import React from \"react\";\n\nexport interface Props {\n  shouldRemember: boolean;\n  onUsernameChange: (username: string) => void;\n  onPasswordChange: (password: string) => void;\n  onRememberChange: (remember: boolean) => void;\n  onSubmit: (username: string, password: string) => void;\n}\n\nfunction LoginForm(props: Props) {\n  const [username, setUsername] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const [remember, setRemember] = React.useState(props.shouldRemember);\n\n  const handleUsernameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n    setUsername(value);\n    props.onUsernameChange(value);\n  };\n\n  const handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n    setPassword(value);\n    props.onPasswordChange(value);\n  };\n\n  const handleRememberChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { checked } = e.target;\n    setRemember(checked);\n    props.onRememberChange(checked);\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    props.onSubmit(username, password);\n  };\n\n  return (\n    <form data-testid=\"login-form\" onSubmit={handleSubmit}>\n      <label htmlFor=\"username\">Username:</label>\n      <input\n        data-testid=\"username\"\n        type=\"text\"\n        name=\"username\"\n        value={username}\n        onChange={handleUsernameChange}\n      />\n\n      <label htmlFor=\"password\">Password:</label>\n      <input\n        data-testid=\"password\"\n        type=\"password\"\n        name=\"password\"\n        value={password}\n        onChange={handlePasswordChange}\n      />\n\n      <label>\n        <input\n          data-testid=\"remember\"\n          name=\"remember\"\n          type=\"checkbox\"\n          checked={remember}\n          onChange={handleRememberChange}\n        />\n        Remember me?\n      </label>\n\n      <button type=\"submit\" data-testid=\"submit\">\n        Sign in\n      </button>\n    </form>\n  );\n}\n\nexport default LoginForm;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Products } from \"./screens\";\n\nconst AppRouter = () => {\n  return (\n    <Switch>\n      <Route path='/' exact component={Products} />\n      \n      <Route\n        path='*'\n        exact\n        render={() => (\n          <div>\n            <h1>Page not found</h1>\n          </div>\n        )}\n      />\n    </Switch>\n  );\n};\n\nexport default AppRouter;\n","import React from \"react\";\nimport \"./App.scss\";\n\nimport { Navbar, Footer } from \"./shared\";\nimport AppRouter from \"./router\";\nimport { Container } from \"reactstrap\";\n\nconst App = () => {\n  return (\n    <Container>\n      <Navbar />\n      <AppRouter />\n      <Footer />\n    </Container>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  FETCH_ALL_PRODUCTS,\n  CHECK_AVAILABILITY,\n  // FETCH_BEST_PRODUCTS,\n  // FETCH_TOP_PRODUCTS,\n  // UPDATE_FILTER\n} from \"../actions/product.types\";\nimport { Product } from \"../model/product\";\n\nconst initialState = {\n  products: [],\n  storeStatus: []\n};\nconst ProductReducer = (\n  state = initialState,\n  action: { type: string; payload: Product[] }\n) => {\n  const { type, payload } = action;\n  switch (type) {\n    case FETCH_ALL_PRODUCTS:\n      console.log(`*** ${type} ***`);\n      payload.forEach(item => {\n        item.checkAvailability = false;\n      })\n      return {\n        ...state,\n        products: payload\n      };\n    case CHECK_AVAILABILITY:\n      console.log(`*** ${type} ***`);\n      // const status = state.storeStatus;\n      // const findid = status.findIndex(s:  => s.id === payload.id);\n      // status[findid] = payload;\n      return {\n        ...state,\n        storeStatus: payload\n      };\n    // case FETCH_TOP_PRODUCTS:\n    //   console.log(`*** ${type} ***`);\n    //   return {\n    //     ...state,\n    //     topProducts: payload\n    //   };\n    // case UPDATE_FILTER:\n    //   console.log(`*** ${type} ***`);\n    //   return {\n    //     ...state,\n    //     filter: payload\n    //   };\n    default:\n      return state;\n  }\n};\n\nexport default ProductReducer;\n","import { combineReducers } from \"redux\";\nimport ProductReducer from \"./product.reducer\";\n\nexport default combineReducers({\n  products: ProductReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeEnhancers(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}